# 스프링 부트 기본 환경 선택(기본 profile: real,batch)
spring:
  profiles:
    active: batch
    include: real, local
  quartz:
    #job-store-type: memory
    wait-for-jobs-to-complete-on-shutdown: true
    properties:
      #@Configure Main Scheduler Properities
      org.quartz.scheduler.skipUpdateCheck: true
      org.quartz.scheduler.instanceName : Kim_Scheduler      #스케쥴러 이름 설정
          #org.quartz.scheduler.instanceID = AUTO
      #@Configure ThreadPool
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
      org.quartz.threadPool.threadCount: 3    #Quatz쓰레드풀 갯수 설정
      #@Configure JobStore
      org.quartz.jobStore.misfireThreshold: 60000  # Job이 실행되어야 하는데 서버가 셧다운 되었거나 쓰레드가 부족한 경우에 제시간에 실행이 안될 수 있는데 이 경우를 misfire (불발) 되었다고 한다  6000(기본 값 : 1분)  1분이 지나면 misfire되었다고 판단한다. 
      org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore  #작업 및 스리거의 세부 정보 설정
      #https://www.techpaste.com/2016/03/quartz-scheduler-shutdown/
      #debug mode에서는 종료를 기다리지 않고 바로 끝나 버리는 문제가 있음. chromedriver.exe 가 떠 있는지 확인할 것!!!
      #org.quartz.threadPool.makeThreadsDaemons: true
      #org.quartz.scheduler.makeSchedulerThreadDaemon: true
      #org.quartz.scheduler.interruptJobsOnShutdown: true
      org.quartz.plugin.shutdownhook.class: org.quartz.plugins.management.ShutdownHookPlugin
      org.quartz.plugin.shutdownhook.cleanShutdown: true
  output: 
    ansi:
      enabled: ALWAYS #DETECT 기본값
  #Async 설정
  task:
    execution:
      pool:
        core-size: 4  #초기 쓰레드 생성 갯수?
        max-size: 40 # 최대 갯수   Integer.MAX_VALUE 기본값
        queue-capacity: 160 #  큐 쌓이는 최대 갯수
server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
---
# mybatis 설정
mybatis:
  mapper-locations: classpath:sql/**/*.xml
  #config-location: classpath:mybatis/mybatis-config.xml
  type-aliases-package: com.plantynet.tech2.vo
  configuration:
    #lazy-loading-enabled: true
    #aggressive-lazy-loading: false
    map-underscore-to-camel-case: true #자동 낙타 표기법 인식 적용?
    jdbc-type-for-null: null # 쿼리에 보내는 파라메터가 null인경우 오류 방지 파라매터 값을 null로 대채하는듯
---
## 로그 설정파일 위치 지정
#스프링이나 일반 자바프로그램의 경우는 보통 logback.xml 파일을 resources 디렉토리에 만들어서 참조 (클래스 패스 루트상)
#logback은 이 설정파일을 자동으로 찾는데 logback.groovy -> logback-test.xml -> logback.xml 순서로 찾고 없으면 디폴트 설정을 따른다.
#스프링부트의 경우 조금 다르게 logback-spring.xml이라는 이름으로 설정하는데 그 이유는 logback.xml이라는 이름으로 하면
#스프링부트가 설정되기 전에 로그백 관련 설정을 해버리기 때문에 logback.xml이라는 이름 대신 logback-spring.xml을 사용한다.
#logback-spring.xml파일이 없다면 application.yml(.properties)파일의 설정을 보게됨.
logging:
  #아래처럼 logback-spring.xml를 다른 경로로 지정하는 방법도 있음
  #config: classpath:logback/logback-spring.xml
  #path: /var/www/log/SpringBoot2Sample    // path 또는 file 만 지정해야함  둘 다 지정할 경우 path는 무시됨
  file: ${logging.path}/CONSOLE.log
  pattern:
    console: '[%d{yyyy-MM-dd HH:mm:ss}] %logger{10} %-5level [%thread] %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss}|%-5level|%msg%n'
  level:    #TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF  중 하나
    root: INFO
    org.mybatis.spring.SqlSessionUtils: DEBUG
    com.plantynet.tech2.dao: DEBUG
---
custom:
  schedule: '0 0/2 * * * ?'    # 2분에 한번
  apiRndUrl: https://mngsvc.winead.net/Adop/RndUrl
  array: 1, 2, 3
  #파라미터 없으면 에러 발생한다...
  #systemProperties: ${JASYPT_PASSWORD}
mail:
  host_name: mail.plantynet.com
  port: 9000
  strList:
    - strList1
    - strList2
  strMap:
    name: strMap
    address: strMap@gmail.com
  mapList:
    - 
      name: test1
      address: test1@gmail.com
    - 
      name: test2
      address: test2@gmail.com